searchState.loadedDescShard("urlparse", 0, "This is a URL parsing library.\nAn alias type of <code>HashMap&lt;String, QueryValue&gt;</code>.\nAn alias type of <code>Vec&lt;String&gt;</code>.\nFragment identifier\nReturns the argument unchanged.\nGets first value from Vec via HashMap.get().\nGets first value from <code>Vec&lt;String&gt;</code> via <code>HashMap.get()</code>. This …\nGets value from <code>Vec&lt;String&gt;</code> via <code>HashMap.get()</code>. This …\nReturn a query object by executing <code>parse_qs()</code> with …\nHost name (lower case)\nCalls <code>U::from(self)</code>.\nNetwork location part\nCreates a new <code>Url</code> initialized with the empty string or …\nParses a URL and returns a <code>Url</code> object.\nParses a query given as a string argument.\nPassword\nHierarchical path\nPort number as integer\nQuery component\nReplaces special characters in string using the %xx escape.\nLike quote(), but also replaces ’ ’ with ‘+’, as …\nURL scheme specifier\nReturns a URL string from a <code>Url</code> object.\nReplaces %xx escapes by their single-character equivalent.\nLike unquote(), but also replaces plus signs by spaces, as …\nParses a URL and returns a <code>Url</code> object. This is synonymous …\nReturns a URL string from a <code>Url</code> object. This is synonymous …\nUser name")