searchState.loadedDescShard("fantoccini", 0, "A medium-level API for programmatically interacting with …\nA WebDriver client tied to a single browser session.\nA builder for WebDriver <code>Client</code> instances.\nFind an element matching the given CSS selector.\nFind an element using the given <code>id</code>.\nFind a link element with the given link text.\nAn element locator.\nFind an element using the given XPath expression.\nActions functionality for WebDriver.\nPass the given WebDriver capabilities to the browser.\nWebDriver client implementation.\nConnect to the WebDriver session at the <code>webdriver</code> URL.\nCookie-related functionality for WebDriver.\nTypes used to represent particular elements on a page.\nError types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIssue the specified <code>WebDriverCompatibleCommand</code> to the …\nKey codes for use with Actions.\nBuild a <code>Client</code> that will connect using the given HTTP …\nBuild a <code>Client</code> that will connect using Rustls.\nAllow to wait for conditions.\nWebDriver types and declarations.\nThe action type associated with this <code>InputSource</code>.\nA sequence of actions to be performed.\nA list of action sequences to be performed via …\nPointer cancel action. Used to cancel the current pointer …\nKey down action.\nPointer button down.\nA source capable of providing inputs for a browser action …\nAn action performed with a keyboard.\nA sequence containing <code>Key</code> actions.\nLeft mouse button constant for use with <code>PointerAction</code>.\nMiddle mouse button constant for use with <code>PointerAction</code>.\nRight mouse button constant for use with <code>PointerAction</code>.\nA sequence containing <code>Pointer</code> actions for a mouse.\nMove the pointer relative to the current position.\nMove the pointer to a new position.\nMove the pointer to a position relative to the specified …\nAn action not associated with an input device (e.g. pause).\nA sequence containing <code>Null</code> actions.\nPause for the specified duration.\nPause action. Useful for adding pauses between other key …\nPause action. Useful for adding pauses between other key …\nA sequence containing <code>Pointer</code> actions for a pen device.\nAn action performed with a pointer device.\nA sequence containing <code>Pointer</code> actions for a touch device.\nKey up action.\nPointer button up.\nAppend the specified sequence to the list of sequences.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new NullActions sequence.\nCreate a new KeyActions sequence.\nCreate a new <code>MouseActions</code> sequence.\nCreate a new <code>PenActions</code> sequence.\nCreate a new <code>TouchActions</code> sequence.\nAdd a pause action to the sequence for this input source.\nAdd the specified action to the sequence for this input …\nThe pause duration, given in milliseconds.\nThe key code, e.g. <code>&#39;a&#39;</code>. See the <code>Key</code> enum for special key …\nThe key code, e.g. <code>&#39;a&#39;</code>. See the <code>Key</code> enum for special key …\nThe pause duration.\nThe mouse button index.\nThe mouse button index.\nThe pause duration, given in milliseconds.\nThe move duration.\nThe move duration.\nThe move duration.\nThe element to move the pointer in relation to. The <code>x</code> and <code>y</code>…\n<code>x</code> offset, in pixels.\n<code>x</code> offset, in pixels.\n<code>x</code> offset, in pixels.\n<code>y</code> offset, in pixels.\n<code>y</code> offset, in pixels.\n<code>y</code> offset, in pixels.\nA WebDriver client tied to a single browser session.\nResponse returned by <code>Client::new_window()</code> method.\nAccept the active alert, if there is one.\nGet the active element for this session.\nAdd the specified cookie.\nGo back to the previous page.\nTerminate the WebDriver session.\nCloses the current window.\nRetrieve the currently active URL for this session.\nDelete all cookies from the current document.\nDelete a single cookie from the current document.\nDismiss the active alert, if there is one.\nSwitches to the frame specified at the index.\nSwitches to the parent of the frame the client is …\nExecute the given JavaScript <code>script</code> in the current browser …\nExecute the given async JavaScript <code>script</code> in the current …\nFind an element on the page that matches the given <code>Locator</code>.\nFind all elements on the page that match the given <code>Locator</code>.\nLocate a form on the page.\nGo forward to the next page.\nReturns the argument unchanged.\nMake the current window fullscreen.\nGet the text of the active alert, if there is one.\nGet all cookies associated with the current document.\nGet a single named cookie associated with the current …\nGet the timeouts for the current session.\nGet the current User Agent string.\nGets the x and y top-left coordinate of the current window.\nGets the x, y, width, and height properties of the current …\nGets the width and height of the current window.\nNavigate directly to the given URL.\nHandle to the created browser window.\nCalls <code>U::from(self)</code>.\nMaximize the current window.\nMinimize the current window.\nCreates a new window. If <code>as_tab</code> is <code>true</code>, then a tab will …\nCreate a new Actions chain.\nMark this client’s session as persistent.\nIssue an HTTP request to the given <code>url</code> with all the same …\nRefresh the current previous page.\nRelease all input actions.\nGet a PNG-encoded screenshot of the current page.\nSend the specified text to the active alert, if there is …\nGet the unique session ID assigned by the WebDriver server …\nSet the User Agent string to use for all subsequent …\nSets the x, y, width, and height properties of the current …\nSets the x, y, width, and height properties of the current …\nSets the x, y, width, and height properties of the current …\nGet the HTML source for the current page.\nGet the WebDriver status.\nSwitches to the chosen window.\nGet the current page title.\nType of the created browser window.\nSet the timeouts for the current session.\nStarting building a new wait operation. This can be used …\nWait for the given function to return <code>true</code> before …\nWait for the given element to be present on the page.\nWait for the page to navigate to a new URL before …\nGets the current window handle.\nGets a list of all active windows (and tabs)\nConnect to the WebDriver host running the given address.\nBuild and issue an HTTP request to the given <code>url</code> with all …\nType alias for a cookie::Cookie\nA single DOM element on the current page.\nWeb element reference.\nAn HTML form on the current page.\nLook up an attribute value for this element by name.\nClear this element.\nSimulate the user clicking on this element.\nGet back the <code>Client</code> hosting this <code>Element</code>.\nGet back the <code>Client</code> hosting this <code>Form</code>.\nLook up the computed value of a CSS property for this …\nGet the element id as given by the webdriver.\nSwitches to the frame contained within the element.\nFind the first descendant element that matches the given …\nFind all descendant elements that match the given <code>Locator</code>.\nFollow the <code>href</code> target of the element matching the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct an <code>Element</code> with the specified element id. The …\nRetrieve the HTML contents of this element.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if the element is currently displayed.\nReturn true if the element is currently enabled.\nReturn true if the element is currently selected.\nLook up a DOM property for this element by name.\nGets the x, y, width, and height properties of the current …\nGet a PNG-encoded screenshot of this element.\nFind and click an <code>&lt;option&gt;</code> child element by a locator.\nFind and click an <code>&lt;option&gt;</code> child element by its index.\nFind and click an <code>&lt;option&gt;</code> element by its visible text.\nFind and click an <code>option</code> child element by its <code>value</code> …\nSimulate the user sending keys to this element.\nFind a form input using the given <code>locator</code> and set its …\nFind a form input with the given <code>name</code> and set its value to …\nSubmit this form using the first available submit button.\nSubmit this form directly, without clicking any buttons.\nSubmit this form directly, without clicking any buttons, …\nSubmit this form using the form submit button with the …\nSubmit this form using the button matched by the given …\nRetrieve the tag name of this element.\nRetrieve the text contents of this element.\nA bad URL was encountered during parsing.\nThe given WebDriver URL is invalid.\nAn error occurred while executing some browser action.\nThe WebDriver server could not be reached.\nA request to the WebDriver server failed.\nCould not decode a base64 image\nA function was invoked with an invalid argument.\nError of attempting to create an invalid <code>WindowHandle</code> from …\nThe WebDriver server responded to a command with an …\nThe connection to the WebDriver server was lost.\nThe connection to the WebDriver server was lost.\nAn error occurred while attempting to establish a session …\nThe requested alert does not exist.\nNo element was found matching the given locator.\nThe requested window does not exist.\nThe WebDriver server responded with a non-standard, …\nThe server did not give a WebDriver-conforming response.\nThe WebDriver server produced a response that does not …\nThe WebDriver server refused to create a new session.\nA standard WebDriver error occurred.\nTimeout of a wait condition.\nError returned by WebDriver.\nReturns code of this error provided by WebDriver.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns HTTP Status of this error provided by WebDriver.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this error indicates that a matching …\nDescription of this error provided by WebDriver.\nStacktrace of this error provided by WebDriver.\nAdd key\nAlt key\nBackspace key\nCancel\nClear\nCommand key\nControl key\nDecimal key\nDelete key\nDivide key\nDown arrow key\nEnd key\nEnter key\nEquals key\nEscape key\nF1 key\nF10 key\nF11 key\nF12 key\nF2 key\nF3 key\nF4 key\nF5 key\nF6 key\nF7 key\nF8 key\nF9 key\nHelp\nHome key\nInsert key\nKey codes for use with Actions.\nLeft arrow key\nMeta key\nMultiply key\nNull\nNumpad 0 key\nNumpad 1 key\nNumpad 2 key\nNumpad 3 key\nNumpad 4 key\nNumpad 5 key\nNumpad 6 key\nNumpad 7 key\nNumpad 8 key\nNumpad 9 key\nPage Down key\nPage Up key\nPause key\nReturn key\nRight arrow key\nSemicolon key\nSeparator key\nShift key\nSpace bar\nSubtract key\nTab key\nUp arrow key\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUsed for setting up a wait operation on the client.\nSet the timeout until the operation should wait.\nSets the period to delay checks.\nWait until a particular element can be found.\nWait until a given URL is reached.\nWait forever.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new wait operation from a client.\nDynamic set of WebDriver capabilities.\nFind an element matching the given CSS selector.\nFind an element using the given <code>id</code>.\nFind a link element with the given link text.\nAn element locator.\nA type of a new browser window.\nOpened in a tab.\nTimeout configuration, for various timeout settings.\nA command that can be sent to the WebDriver.\nThe WebDriver status as returned by <code>Client::status()</code>.\nOpened in a separate window.\nA handle to a browser window.\nFind an element using the given XPath expression.\nThe endpoint to send the request to.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the implicit wait timeout.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn true if this session should only support the legacy …\nReturn true if this command starts a new WebDriver session.\nThe current status message.\nThe HTTP request method to use, and the request body for …\nCreate new timeout configuration.\nGet the page load timeout.\nTrue if the webdriver is ready to start a new session.\nGet the script timeout.\nSet the implicit wait timeout.\nSet the page load timeout.\nSet the script timeout.\nMakes the given string a <code>WindowHandle</code>.\nMakes the given <code>String</code> a <code>WindowHandle</code>.\nMakes the given string a <code>WindowHandle</code>.")