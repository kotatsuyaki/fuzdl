window.SIDEBAR_ITEMS = {"constant":[["ICC_PROFILE_ECI_V2",""],["OP_COLOR_SET_FILL_COLOR","set fill color (PDF 1.1)"],["OP_COLOR_SET_FILL_COLOR_ICC","set fill color (PDF 1.2) with support for Icc, etc."],["OP_COLOR_SET_FILL_CS","non-stroking color space (PDF 1.1)"],["OP_COLOR_SET_FILL_CS_DEVICECMYK","Set the fill color to DeviceCMYK"],["OP_COLOR_SET_FILL_CS_DEVICEGRAY","Set the fill color space to DeviceGray"],["OP_COLOR_SET_FILL_CS_DEVICERGB","Set the fill color space to DeviceRGB"],["OP_COLOR_SET_STROKE_COLOR","set stroking color (PDF 1.1)"],["OP_COLOR_SET_STROKE_COLOR_ICC","set stroking color (PDF 1.2) with support for ICC, etc."],["OP_COLOR_SET_STROKE_CS","Color"],["OP_COLOR_SET_STROKE_CS_DEVICECMYK","Set the stroking color space to DeviceCMYK"],["OP_COLOR_SET_STROKE_CS_DEVICEGRAY","Set the stroking color space to DeviceGray"],["OP_COLOR_SET_STROKE_CS_DEVICERGB","Set the stroking color space to DeviceRGB"],["OP_PATH_CONST_3BEZIER_V1","Cubic bezier with two points in v1"],["OP_PATH_CONST_3BEZIER_V2","Cubic bezier with two points in v2"],["OP_PATH_CONST_4BEZIER","Cubic bezier over four following points"],["OP_PATH_CONST_CLIP_EO","Current path is a clip path, non-zero winding order"],["OP_PATH_CONST_CLIP_NZ","Current path is a clip path, non-zero winding order (usually in like `h W S`)"],["OP_PATH_CONST_CLOSE_SUBPATH","Close current sub-path (for appending custom patterns along line)"],["OP_PATH_CONST_LINE_TO","Straight line to the two following points"],["OP_PATH_CONST_MOVE_TO","Path construction Move to point"],["OP_PATH_CONST_RECT","Add rectangle to the path (width / height): x y width height re"],["OP_PATH_PAINT_END","End path without filling or stroking"],["OP_PATH_PAINT_FILL_EO","Fill path using even-odd rule"],["OP_PATH_PAINT_FILL_NZ","Fill path using nonzero winding number rule"],["OP_PATH_PAINT_FILL_NZ_OLD","Fill path using nonzero winding number rule (obsolete)"],["OP_PATH_PAINT_FILL_STROKE_CLOSE_EO","Close, fill and stroke path using even odd rule"],["OP_PATH_PAINT_FILL_STROKE_CLOSE_NZ","Close, fill and stroke path using nonzero winding number rule"],["OP_PATH_PAINT_FILL_STROKE_EO","Fill and stroke path using even-odd rule"],["OP_PATH_PAINT_FILL_STROKE_NZ","Fill and stroke path using nonzero winding number rule"],["OP_PATH_PAINT_STROKE","Path painting Stroke path"],["OP_PATH_PAINT_STROKE_CLOSE","Close and stroke path"],["OP_PATH_STATE_SET_FLATNESS_TOLERANCE","Set flatness tolerance"],["OP_PATH_STATE_SET_GS_FROM_PARAM_DICT","(PDF 1.2) Set graphics state from parameter dictionary"],["OP_PATH_STATE_SET_LINE_CAP","Set line cap"],["OP_PATH_STATE_SET_LINE_DASH","Set line dash pattern"],["OP_PATH_STATE_SET_LINE_JOIN","Set line join"],["OP_PATH_STATE_SET_LINE_WIDTH","General graphics state"],["OP_PATH_STATE_SET_MITER_LIMIT","Set miter limit"],["OP_PATH_STATE_SET_RENDERING_INTENT","Set rendering intent"]],"enum":[["BlackGenerationExtraFunction",""],["BlackGenerationFunction","Black generation calculates the amount of black to be used when trying to reproduce a particular color."],["BlendMode",""],["BuiltinFont","Standard built-in PDF fonts"],["Color","Wrapper for Rgb, Cmyk and other color types"],["ColorBits","How many bits does a color have?"],["ColorSpace","Color space (enum for marking the number of bits a color has)"],["CurTransMat","PDF “current transformation matrix”. Once set, will operate on all following shapes, until the `layer.restore_graphics_state()` is called. It is important to call `layer.save_graphics_state()` earlier."],["Error",""],["Font","The font"],["FormType",""],["GroupXObjectType",""],["HalftoneType","In PDF 1.2, the graphics state includes a current halftone parameter, which determines the halftoning process to be used by the painting operators. It may be defined by either a dictionary or a stream, depending on the type of halftone; the term halftone dictionary is used generically throughout this section to refer to either a dictionary object or the dictionary portion of a stream object. (The halftones that are defined by streams are specifically identified as such in the descriptions of particular halftone types; unless otherwise stated, they are understood to be defined by simple dictionaries instead.) Deserialized into Integer: 1, 5, 6, 10 or 16"],["IccProfileType","Type of the icc profile"],["ImageFilter","Describes the format the image bytes are compressed with."],["IndexError",""],["LineCapStyle","See PDF Reference (Page 216) - Line cap (ending) style"],["LineJoinStyle","See PDF Reference Page 216 - Line join style"],["NonSeperableBlendMode","Since the nonseparable blend modes consider all color components in combination, their computation depends on the blending color space in which the components are interpreted. They may be applied to all multiple-component color spaces that are allowed as blending color spaces (see Section 7.2.3, “Blending Color Space”)."],["OCGIntent","Intent to use for the optional content groups"],["OverprintMode","(PDF 1.3) A code specifying whether a color component value of 0 in a `DeviceCMYK` color space should erase that component (`EraseUnderlying`) or leave it unchanged (`KeepUnderlying`) when overprinting (see Section 4.5.6, “Over- print Control”). Initial value: `EraseUnderlying`"],["PdfColor","Tuple for differentiating outline and fill colors"],["PdfConformance","List of (relevant) PDF versions Please note the difference between PDF/A (archiving), PDF/UA (universal acessibility), PDF/X (printing), PDF/E (engineering / CAD), PDF/VT (large volume transactions with repeated content)"],["PdfError",""],["RenderingIntent","Although CIE-based color specifications are theoretically device-independent, they are subject to practical limitations in the color reproduction capabilities of the output device. Such limitations may sometimes require compromises to be made among various properties of a color specification when rendering colors for a given device. Specifying a rendering intent (PDF 1.1) allows a PDF file to set priorities regarding which of these properties to preserve and which to sacrifice."],["SeperableBlendMode","PDF Reference 1.7, Page 520, Table 7.2 Blending modes for objects In the following reference, each function gets one new color (the thing to paint on top) and an old color (the color that was already present before the object gets painted)"],["SoftMaskFunction",""],["SpotFunction","Spot functions, Table 6.1, Page 489 in Pdf Reference v1.7 The code is pseudo code, returning the grey component at (x, y)."],["TextMatrix","Text matrix. Text placement is a bit different, but uses the same concepts as a CTM that’s why it’s merged here"],["TextRenderingMode","The text rendering mode determines how a text is drawn The default rendering mode is `Fill`. The color of the fill / stroke is determine by the current pages outline / fill color."],["TransferExtraFunction",""],["TransferFunction",""],["UnderColorRemovalExtraFunction",""],["UnderColorRemovalFunction","See `BlackGenerationFunction`, too. Undercolor removal reduces the amounts of the cyan, magenta, and yellow components to compensate for the amount of black that was added by black generation."],["XObject","External object that gets reference outside the PDF content stream Gets constructed similar to the `ExtGState`, then inserted into the `/XObject` dictionary on the page. You can instantiate `XObjects` with the `/Do` operator. The `layer.add_xobject()` (or better yet, the `layer.add_image()`, `layer.add_form()`) methods will do this for you."]],"externcrate":[["image_crate",""],["lopdf",""]],"fn":[["calculate_points_for_circle","Calculates and returns the points for an approximated circle, given a radius and an offset into the centre of circle (starting from bottom left corner of page)."],["calculate_points_for_rect","Calculates and returns the points for a rectangle, given a horizontal and vertical scale. and an offset into the centre of rectangle (starting from bottom left corner of page)."]],"mod":[["color","Color module (CMYK or RGB). Shared between 2D and 3D module."],["ctm","Current transformation matrix, for transforming shapes (rotate, translate, scale)"],["date",""],["document_info","Info dictionary of a PDF document"],["errors","Errors for printpdf"],["extgstate","Extended graphics state, for advanced graphical operation (overprint, black point control, etc.)"],["font","Embedding fonts in 2D for Pdf"],["icc_profile","ICC profile that can be embedded into a PDF"],["image","Abstraction class for images. Please use this class instead of adding `ImageXObjects` yourself"],["indices","These indices are for library internal use only. Use the `add_*` functions to get an index instead."],["line",""],["ocg",""],["pattern",""],["pdf_conformance","Module regulating the comparison and feature sets / allowed plugins of a PDF document"],["pdf_document","A `PDFDocument` represents the whole content of the file"],["pdf_layer","PDF layer management. Layers can contain referenced or real content."],["pdf_metadata","Wapper type for shared metadata between XMP Metadata and the `DocumentInfo` dictionary"],["pdf_page","PDF page management"],["pdf_resources",""],["point",""],["scale","Scaling types for reducing errors between conversions between point (pt) and millimeter (mm)"],["utils","Utility / conveniece functions for commonly use graphical shapes"],["xmp_metadata","Stub plugin for XMP Metadata streams, to be expanded later"],["xobject",""]],"struct":[["Cmyk","CMYK color"],["CustomPdfConformance","Allows building custom conformance profiles. This is useful if you want very small documents for example and  you don’t need conformance with any PDF standard, you just want a PDF file."],["DirectFontRef","Direct reference (wrapper for `lopdf::Object::Reference`) for increased type safety"],["DocumentInfo","“Info” dictionary of a PDF document. Actual data is contained in `DocumentMetadata`, to keep it in sync with the `XmpMetadata` (if the timestamps / settings are not in sync, Preflight will complain)"],["ExtendedGraphicsState","`ExtGState` dictionary"],["ExtendedGraphicsStateBuilder",""],["ExtendedGraphicsStateList","List of many `ExtendedGraphicsState`"],["ExtendedGraphicsStateRef","A reference to the graphics state, for reusing the graphics state during a stream without adding new graphics states all the time"],["ExternalFont",""],["FontIndex","Index of a font"],["FontList","Font list for tracking fonts within a single PDF document"],["FontMetrics","The unscaled base metrics for a font provided by a `FontData` implementation."],["FormXObject","THIS IS NOT A PDF FORM! A form `XObject` can be nearly everything. PDF allows you to reuse content for the graphics stream in a `FormXObject`. A `FormXObject` is basically a layer-like content stream and can contain anything as long as it’s a valid strem. A `FormXObject` is intended to be used for reapeated content on one page."],["FormXObjectRef",""],["GlyphMetrics","The metrics for a glyph provided by a `FontData` implementation."],["Greyscale","Greyscale color"],["GroupXObject",""],["IccProfile","Icc profile"],["IccProfileList",""],["IccProfileRef","Named reference for an ICC profile"],["Image","Image - wrapper around an `ImageXObject` to allow for more control within the library"],["ImageRotation",""],["ImageTransform","Transform that is applied immediately before the image gets painted. Does not affect anything other than the image."],["ImageXObject",""],["ImageXObjectRef","Named reference to an image"],["IndirectFontRef","Indexed reference to a font that was added to the document This is a “reference by postscript name”"],["Line",""],["LineDashPattern","Line dash pattern is made up of a total width"],["Mm","Scale in millimeter"],["OCGList",""],["OCGRef",""],["OffsetDateTime","A [`PrimitiveDateTime`] with a [`UtcOffset`]."],["OptionalContentGroup","Optional content group, for PDF layers. Only available in PDF 1.4 but (I think) lower versions of PDF allow this, too. Used to create Adobe Illustrator-like layers in PDF"],["Pattern","STUB"],["PatternList",""],["PatternRef","Named reference to a pattern"],["PdfContentIndex","Index of the arbitrary content data"],["PdfDocument","PDF document"],["PdfDocumentReference","Marker struct for a document. Used to make the API a bit nicer. It simply calls `PdfDocument` functions."],["PdfLayer","One layer of PDF data"],["PdfLayerIndex","Index of the layer on the nth page"],["PdfLayerReference","A “reference” to the current layer, allows for inner mutability but only inside this library"],["PdfMetadata","This is a wrapper in order to keep shared data between the documents XMP metadata and the “Info” dictionary in sync"],["PdfPage","PDF page"],["PdfPageIndex","Index of the page (0-based)"],["PdfPageReference","A “reference” to the current page, allows for inner mutability but only inside this library"],["PdfResources","Struct for storing the PDF Resources, to be used on a PDF page"],["Point",""],["PostScriptXObject","TODO, very low priority"],["Pt","Scale in point"],["Px","Scale in pixels"],["ReferenceXObject","PDF 1.4 and higher Contains a PDF file to be embedded in the current PDF"],["Rgb","RGB color"],["SMask","`SMask` dictionary. A soft mask (or `SMask`) is a greyscale image that is used to mask another image"],["SoftMask","A soft mask is used for transparent images such as PNG with an alpha component The bytes range from 0xFF (opaque) to 0x00 (transparent). The alpha channel of a PNG image have to be sorted out. Can also be used for Vignettes, etc. Beware of color spaces! See PDF Reference Page 545 - Soft masks"],["SpotColor","Spot color Spot colors are like Cmyk, but without color space They are essentially “named” colors from specific vendors currently they are the same as a CMYK color."],["SvgIndex","Index of a svg file"],["XObjectList","List of `XObjects`"],["XObjectRef","Named reference to an `XObject`"],["XmpMetadata","Initial struct for Xmp metatdata. This should be expanded later for XML handling, etc. Right now it just fills out the necessary fields"]],"trait":[["FontData","Provides access to font metrics."],["FontDataClone","Helper trait for cloning boxed `FontData` implementors."]]};